{"ast":null,"code":"import { Insurance } from '../insurance/Insurance';\nimport { Patient } from '../patient/Patient';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/bill/bill.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../service/token-storage.service\";\nimport * as i4 from \"../service/Patient/patient.service\";\nimport * as i5 from \"../service/Insurance/insurance.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"../index/index.component\";\nfunction BillComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Amount is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BillComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, BillComponent_div_15_div_1_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(14);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1.errors.required);\n  }\n}\nfunction BillComponent_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pat_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", pat_r6.pid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", pat_r6.pid, \" \", pat_r6.pName, \" \");\n  }\n}\nfunction BillComponent_option_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ins_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", ins_r7.iNo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", ins_r7.iNo, \" (\", ins_r7.patient.pid, \" \", ins_r7.patient.pName, \") \");\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let BillComponent = /*#__PURE__*/(() => {\n  var _class;\n  class BillComponent {\n    constructor(bs, router, route, ts, ps, is, renderer) {\n      this.bs = bs;\n      this.router = router;\n      this.route = route;\n      this.ts = ts;\n      this.ps = ps;\n      this.is = is;\n      this.renderer = renderer;\n      this.btn = 'save';\n      this.bill = {\n        bId: null,\n        bAmt: null,\n        billDate: null,\n        isInsuared: true,\n        insurance: new Insurance(),\n        patient: new Patient()\n      };\n    }\n    ngOnInit() {\n      this.renderer.setStyle(document.body, 'background-color', '#C3E6FC');\n      if (this.ts.getToken()) {\n        this.getForm();\n        this.getIns();\n        this.getPatients();\n      } else {\n        this.router.navigate(['login']);\n      }\n    }\n    getPatients() {\n      this.ps.getAllPatient().subscribe(list => {\n        this.patientList = list;\n      });\n    }\n    getIns() {\n      this.is.getAllInsurance().subscribe(list => {\n        this.insList = list;\n      });\n    }\n    getForm() {\n      if (this.route.snapshot.params['id'] > 0) {\n        this.id = this.route.snapshot.params['id'];\n        this.btn = 'update';\n        this.getBill();\n      }\n    }\n    getBill() {\n      this.bs.getBillById(this.id).subscribe(data => {\n        this.bill = data;\n      }, error => console.log(error));\n    }\n    onSubmit() {\n      console.log(this.bill);\n      console.log(this.id);\n      if (this.id > 0) {\n        this.update();\n      } else {\n        console.log(this.bill);\n        this.save();\n      }\n    }\n    update() {\n      this.bs.updateBill(this.id, this.bill).subscribe(response => {\n        console.log(response);\n        alert('Bill updated');\n        this.gotoNext();\n      }, error => {\n        console.log(error);\n        alert('can not update');\n      });\n    }\n    save() {\n      this.bs.addBill(this.bill).subscribe(response => {\n        console.log(response);\n        alert('Bill Generated');\n        this.gotoNext();\n      }, error => {\n        console.log(error);\n        alert('can not save');\n      });\n    }\n    gotoNext() {\n      if (this.id > 0) {\n        this.router.navigate(['invoice', this.id]);\n      } else {\n        this.router.navigate(['invoice', this.bill.bId]);\n      }\n    }\n  }\n  _class = BillComponent;\n  _class.ɵfac = function BillComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.BillService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.TokenStorageService), i0.ɵɵdirectiveInject(i4.PatientService), i0.ɵɵdirectiveInject(i5.InsuranceService), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-bill\"]],\n    decls: 28,\n    vars: 10,\n    consts: [[1, \"container\", 2, \"margin-top\", \"8%\"], [1, \"text-center\"], [1, \"row\", \"justify-content-center\", \"align-items-center\"], [1, \"col-10\", \"col-md-8\", \"col-lg-6\"], [\"name\", \"billForm\", \"novalidate\", \"\", 1, \"form-example\", 3, \"ngSubmit\"], [\"b\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"bAmt\"], [\"type\", \"number\", \"id\", \"bAmt\", \"name\", \"bAmt\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"bAmt\", \"ngModel\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"patient\"], [\"name\", \"patient\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"insurance\"], [\"name\", \"insurance\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", \"btn-customized\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [3, \"value\"]],\n    template: function BillComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r8 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelement(0, \"app-index\");\n        i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1)(3, \"h1\");\n        i0.ɵɵtext(4, \"Bill Registration Page\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"p\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 2)(7, \"div\", 3)(8, \"form\", 4, 5);\n        i0.ɵɵlistener(\"ngSubmit\", function BillComponent_Template_form_ngSubmit_8_listener() {\n          i0.ɵɵrestoreView(_r8);\n          const _r0 = i0.ɵɵreference(9);\n          return i0.ɵɵresetView(_r0.form.valid && ctx.onSubmit());\n        });\n        i0.ɵɵelementStart(10, \"div\", 6)(11, \"label\", 7);\n        i0.ɵɵtext(12, \"Treatment Charge : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 8, 9);\n        i0.ɵɵlistener(\"ngModelChange\", function BillComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.bill.bAmt = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, BillComponent_div_15_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 6)(17, \"label\", 11);\n        i0.ɵɵtext(18, \"Patient id : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"select\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function BillComponent_Template_select_ngModelChange_19_listener($event) {\n          return ctx.bill.patient.pid = $event;\n        });\n        i0.ɵɵtemplate(20, BillComponent_option_20_Template, 2, 3, \"option\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 6)(22, \"label\", 14);\n        i0.ɵɵtext(23, \"insurance id : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"select\", 15);\n        i0.ɵɵlistener(\"ngModelChange\", function BillComponent_Template_select_ngModelChange_24_listener($event) {\n          return ctx.bill.insurance.iNo = $event;\n        });\n        i0.ɵɵtemplate(25, BillComponent_option_25_Template, 2, 4, \"option\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"button\", 16);\n        i0.ɵɵtext(27);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(9);\n        const _r1 = i0.ɵɵreference(14);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngModel\", ctx.bill.bAmt)(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, _r0.submitted && _r1.invalid));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r0.submitted && _r1.invalid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.bill.patient.pid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.patientList);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.bill.insurance.iNo);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.insList);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.btn);\n      }\n    },\n    dependencies: [i6.NgClass, i6.NgForOf, i6.NgIf, i7.ɵNgNoValidate, i7.NgSelectOption, i7.ɵNgSelectMultipleOption, i7.DefaultValueAccessor, i7.NumberValueAccessor, i7.SelectControlValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.NgModel, i7.NgForm, i8.IndexComponent]\n  });\n  return BillComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}