{"ast":null,"code":"import { Ward } from './Ward';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../service/Ward/ward.service\";\nimport * as i3 from \"../service/token-storage.service\";\nimport * as i4 from \"../service/Doctor/doctor.service\";\nimport * as i5 from \"../service/Patient/patient.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"../index/index.component\";\nfunction WardComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WardComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, WardComponent_div_15_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(14);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1.errors.required);\n  }\n}\nfunction WardComponent_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const doctor_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", doctor_r6.doctorId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", doctor_r6.doctorId, \" \", doctor_r6.doctorName, \" \");\n  }\n}\nfunction WardComponent_option_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pat_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", pat_r7.pid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", pat_r7.pid, \" \", pat_r7.pName, \" \");\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let WardComponent = /*#__PURE__*/(() => {\n  var _class;\n  class WardComponent {\n    constructor(router, ws, route, tss, ds, ps, renderer) {\n      this.router = router;\n      this.ws = ws;\n      this.route = route;\n      this.tss = tss;\n      this.ds = ds;\n      this.ps = ps;\n      this.renderer = renderer;\n      this.ward = new Ward();\n      console.log(this.router.getCurrentNavigation().extras.state);\n    }\n    ngOnInit() {\n      this.renderer.setStyle(document.body, 'background-color', '#C3E6FC');\n      if (this.tss.getToken()) {\n        if (history.state) {\n          this.ward.patient = history.state;\n        }\n        if (this.route.snapshot.params['id'] > 0) {\n          this.id = this.route.snapshot.params['id'];\n          this.getWard();\n        }\n        this.getPatient();\n        this.getDocs();\n      } else {\n        this.router.navigate(['login']);\n      }\n    }\n    getDocs() {\n      this.ds.getAllDoctor().subscribe(list => {\n        this.docList = list;\n      });\n    }\n    getPatient() {\n      this.ps.getAllPatient().subscribe(list => {\n        this.patientList = list;\n      });\n    }\n    getWard() {\n      this.ws.getWardById(this.id).subscribe(data => {\n        this.ward = data;\n      }, error => {\n        console.log(error);\n      });\n    }\n    onSubmit() {\n      if (this.id > 0) {\n        this.update();\n      } else {\n        this.save();\n      }\n    }\n    update() {\n      this.ws.updateWard(this.id, this.ward).subscribe(data => {\n        console.log(data);\n        alert(\"Patient admited to the ward + \" + data.wid);\n        this.gotoNext();\n      }, error => {\n        console.log(error);\n        alert('cannot save your data');\n      });\n    }\n    save() {\n      this.ws.addWard(this.ward).subscribe(data => {\n        console.log(data);\n        alert(\"Patient admited to the ward + \" + data.wid);\n        this.gotoNext();\n      }, error => {\n        console.log(error);\n        alert('can not save your data');\n      });\n    }\n    gotoNext() {\n      if (this.id > 0) {\n        this.router.navigate(['wardList']);\n      } else {\n        this.router.navigate(['wardList']);\n      }\n    }\n  }\n  _class = WardComponent;\n  _class.ɵfac = function WardComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.WardService), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i3.TokenStorageService), i0.ɵɵdirectiveInject(i4.DoctorService), i0.ɵɵdirectiveInject(i5.PatientService), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-ward\"]],\n    decls: 28,\n    vars: 9,\n    consts: [[1, \"text-center\", 2, \"margin-top\", \"8%\"], [1, \"container\", \"h-100\"], [1, \"row\", \"h-100\", \"justify-content-center\", \"align-items-center\"], [1, \"col-10\", \"col-md-8\", \"col-lg-6\"], [\"name\", \"WardForm\", \"novalidate\", \"\", 1, \"form-example\", 3, \"ngSubmit\"], [\"w\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"wardName\"], [\"type\", \"text\", \"id\", \"wardName\", \"name\", \"wardName\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"wardName\", \"ngModel\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"doctor\"], [\"name\", \"doctor\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", \"btn-customized\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [3, \"value\"]],\n    template: function WardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r8 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelement(0, \"app-index\");\n        i0.ɵɵelementStart(1, \"div\", 0)(2, \"h1\");\n        i0.ɵɵtext(3, \"Ward Page\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"p\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"div\", 2)(7, \"div\", 3)(8, \"form\", 4, 5);\n        i0.ɵɵlistener(\"ngSubmit\", function WardComponent_Template_form_ngSubmit_8_listener() {\n          i0.ɵɵrestoreView(_r8);\n          const _r0 = i0.ɵɵreference(9);\n          return i0.ɵɵresetView(_r0.form.valid && ctx.onSubmit());\n        });\n        i0.ɵɵelementStart(10, \"div\", 6)(11, \"label\", 7);\n        i0.ɵɵtext(12, \"Name : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 8, 9);\n        i0.ɵɵlistener(\"ngModelChange\", function WardComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.ward.wardName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, WardComponent_div_15_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 6)(17, \"label\", 11);\n        i0.ɵɵtext(18, \"Doctor Id : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"select\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function WardComponent_Template_select_ngModelChange_19_listener($event) {\n          return ctx.ward.doctor.doctorId = $event;\n        });\n        i0.ɵɵtemplate(20, WardComponent_option_20_Template, 2, 3, \"option\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 6)(22, \"label\", 11);\n        i0.ɵɵtext(23, \" Select Patient \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"select\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function WardComponent_Template_select_ngModelChange_24_listener($event) {\n          return ctx.ward.patient.pid = $event;\n        });\n        i0.ɵɵtemplate(25, WardComponent_option_25_Template, 2, 3, \"option\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"button\", 14);\n        i0.ɵɵtext(27, \"Save\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(9);\n        const _r1 = i0.ɵɵreference(14);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngModel\", ctx.ward.wardName)(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, _r0.submitted && _r1.invalid));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r0.submitted && _r1.invalid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.ward.doctor.doctorId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.docList);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.ward.patient.pid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.patientList);\n      }\n    },\n    dependencies: [i6.NgClass, i6.NgForOf, i6.NgIf, i7.ɵNgNoValidate, i7.NgSelectOption, i7.ɵNgSelectMultipleOption, i7.DefaultValueAccessor, i7.SelectControlValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.NgModel, i7.NgForm, i8.IndexComponent]\n  });\n  return WardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}