{"ast":null,"code":"import { Patient } from './Patient';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../service/Patient/patient.service\";\nimport * as i3 from \"../service/token-storage.service\";\nimport * as i4 from \"../service/test/test.service\";\nimport * as i5 from \"../service/Doctor/doctor.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"../index/index.component\";\nfunction PatientComponent_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Patient Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtemplate(1, PatientComponent_div_16_div_1_Template, 2, 0, \"div\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(15);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1.errors.required);\n  }\n}\nfunction PatientComponent_div_22_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Patient DOB is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtemplate(1, PatientComponent_div_22_div_1_Template, 2, 0, \"div\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r3 = i0.ɵɵreference(21);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors.required);\n  }\n}\nfunction PatientComponent_div_28_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Mobile no. is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientComponent_div_28_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Contact No must be at least 10 digit\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtemplate(1, PatientComponent_div_28_div_1_Template, 2, 0, \"div\", 27);\n    i0.ɵɵtemplate(2, PatientComponent_div_28_div_2_Template, 2, 0, \"div\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r5 = i0.ɵɵreference(27);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r5.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r5.errors.minlength);\n  }\n}\nfunction PatientComponent_div_34_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Patient Address is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PatientComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtemplate(1, PatientComponent_div_34_div_1_Template, 2, 0, \"div\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r7 = i0.ɵɵreference(33);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r7.errors.required);\n  }\n}\nfunction PatientComponent_option_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const doctor_r16 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", doctor_r16.doctorId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", doctor_r16.doctorId, \" \", doctor_r16.doctorName, \" \");\n  }\n}\nfunction PatientComponent_option_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const t_r17 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", t_r17.tid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", t_r17.tid, \" \", t_r17.tName, \" \");\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let PatientComponent = /*#__PURE__*/(() => {\n  var _class;\n  class PatientComponent {\n    constructor(router, ps, route, tss, ts, ds, renderer) {\n      this.router = router;\n      this.ps = ps;\n      this.route = route;\n      this.tss = tss;\n      this.ts = ts;\n      this.ds = ds;\n      this.renderer = renderer;\n      this.pat = new Patient();\n    }\n    ngOnInit() {\n      this.renderer.setStyle(document.body, 'background-color', '#C3E6FC');\n      if (this.tss.getToken()) {\n        if (this.route.snapshot.params['id'] > 0) {\n          this.id = this.route.snapshot.params['id'];\n          this.getPatient();\n        }\n        this.getDocs();\n        this.getTests();\n        this.setCal();\n      } else {\n        this.router.navigate(['login']);\n      }\n    }\n    setCal() {\n      var dtToday = new Date();\n      this.month = dtToday.getMonth() + 1;\n      this.day = dtToday.getDate();\n      this.year = dtToday.getFullYear().toString();\n      if (this.month < 0) {\n        this.month = '0' + this.month.toString();\n      }\n      if (this.day < 10) {\n        this.day = '0' + this.day.toString();\n      }\n      var maxDate = this.year + '-' + this.month + '-' + this.day;\n      console.log(maxDate);\n      document.getElementById('pDob').setAttribute('max', maxDate);\n    }\n    getDocs() {\n      this.ds.getAllDoctor().subscribe(list => {\n        this.docList = list;\n      });\n    }\n    getTests() {\n      this.ts.getAllTest().subscribe(list => {\n        this.testList = list;\n      });\n    }\n    getPatient() {\n      this.ps.getPatientById(this.id).subscribe(data => {\n        this.pat = data;\n      }, error => {\n        console.log(error);\n      });\n    }\n    onSubmit() {\n      if (this.id > 0) {\n        // update\n        this.update();\n      } else {\n        // save\n        this.save();\n        // this.check();\n      }\n    }\n\n    check() {\n      this.ps.checkIsAvailable(this.pat).subscribe(res => {\n        if (!res.available) {\n          this.save();\n        } else {\n          alert('patient already regiesterd');\n        }\n      }, error => console.log(error));\n    }\n    update() {\n      this.ps.updatePatient(this.id, this.pat).subscribe(data => {\n        console.log(data);\n        alert(\"patient updated successfully\");\n        this.gotoNext();\n      }, error => {\n        console.log(error);\n        alert('can not updated your data');\n      });\n    }\n    save() {\n      this.ps.addPatient(this.pat).subscribe(data => {\n        console.log(data);\n        alert(\"patient Registerd successfully\");\n        this.gotoNext();\n      }, error => {\n        console.log(error);\n        alert('can not save your data');\n      });\n    }\n    gotoNext() {\n      if (this.id > 0) {\n        this.router.navigate(['patientList']);\n      } else {\n        this.router.navigate(['patientList']);\n      }\n    }\n  }\n  _class = PatientComponent;\n  _class.ɵfac = function PatientComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.PatientService), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i3.TokenStorageService), i0.ɵɵdirectiveInject(i4.TestService), i0.ɵɵdirectiveInject(i5.DoctorService), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-patient\"]],\n    decls: 47,\n    vars: 24,\n    consts: [[1, \"container\", 2, \"margin-top\", \"8%\"], [1, \"text-center\"], [1, \"row\", \"justify-content-center\", \"align-items-center\"], [1, \"col-10\", \"col-md-8\", \"col-lg-6\"], [\"name\", \"patForm\", \"novalidate\", \"\", 1, \"form-example\", 3, \"ngSubmit\"], [\"p\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"pName\"], [\"type\", \"text\", \"id\", \"pName\", \"name\", \"pName\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"pName\", \"ngModel\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"pDob\"], [\"type\", \"date\", \"id\", \"pDob\", \"name\", \"pDob\", \"required\", \"\", 1, \"form-control\", \"txtDate\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"pDob\", \"ngModel\"], [\"for\", \"pMobileNo\"], [\"type\", \"number\", \"id\", \"pMobileNo\", \"name\", \"pMobileNo\", \"required\", \"\", \"minlength\", \"10\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"pMobileNo\", \"ngModel\"], [\"for\", \"pAdd\"], [\"type\", \"text\", \"id\", \"pAdd\", \"name\", \"pAdd\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"pAdd\", \"ngModel\"], [\"for\", \"doc\"], [\"name\", \"doc\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"test\"], [\"name\", \"test\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", \"btn-customized\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [3, \"value\"]],\n    template: function PatientComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r18 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelement(0, \"app-index\");\n        i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1)(3, \"h3\");\n        i0.ɵɵtext(4, \"Patient Registration Page\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p\");\n        i0.ɵɵtext(6, \"Register the Patient\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 2)(8, \"div\", 3)(9, \"form\", 4, 5);\n        i0.ɵɵlistener(\"ngSubmit\", function PatientComponent_Template_form_ngSubmit_9_listener() {\n          i0.ɵɵrestoreView(_r18);\n          const _r0 = i0.ɵɵreference(10);\n          return i0.ɵɵresetView(_r0.form.valid && ctx.onSubmit());\n        });\n        i0.ɵɵelementStart(11, \"div\", 6)(12, \"label\", 7);\n        i0.ɵɵtext(13, \"Name : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"input\", 8, 9);\n        i0.ɵɵlistener(\"ngModelChange\", function PatientComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.pat.pName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, PatientComponent_div_16_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 6)(18, \"label\", 11);\n        i0.ɵɵtext(19, \"DOB : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"input\", 12, 13);\n        i0.ɵɵlistener(\"ngModelChange\", function PatientComponent_Template_input_ngModelChange_20_listener($event) {\n          return ctx.pat.pDob = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(22, PatientComponent_div_22_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 6)(24, \"label\", 14);\n        i0.ɵɵtext(25, \"Contact No : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"input\", 15, 16);\n        i0.ɵɵlistener(\"ngModelChange\", function PatientComponent_Template_input_ngModelChange_26_listener($event) {\n          return ctx.pat.pMobileNo = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(28, PatientComponent_div_28_Template, 3, 2, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 6)(30, \"label\", 17);\n        i0.ɵɵtext(31, \"Address : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"input\", 18, 19);\n        i0.ɵɵlistener(\"ngModelChange\", function PatientComponent_Template_input_ngModelChange_32_listener($event) {\n          return ctx.pat.pAdd = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(34, PatientComponent_div_34_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 6)(36, \"label\", 20);\n        i0.ɵɵtext(37, \"Doctor Id : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"select\", 21);\n        i0.ɵɵlistener(\"ngModelChange\", function PatientComponent_Template_select_ngModelChange_38_listener($event) {\n          return ctx.pat.doc.doctorId = $event;\n        });\n        i0.ɵɵtemplate(39, PatientComponent_option_39_Template, 2, 3, \"option\", 22);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(40, \"div\", 6)(41, \"label\", 23);\n        i0.ɵɵtext(42, \"Test Id : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"select\", 24);\n        i0.ɵɵlistener(\"ngModelChange\", function PatientComponent_Template_select_ngModelChange_43_listener($event) {\n          return ctx.pat.test.tid = $event;\n        });\n        i0.ɵɵtemplate(44, PatientComponent_option_44_Template, 2, 3, \"option\", 22);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(45, \"button\", 25);\n        i0.ɵɵtext(46, \"Save\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(10);\n        const _r1 = i0.ɵɵreference(15);\n        const _r3 = i0.ɵɵreference(21);\n        const _r5 = i0.ɵɵreference(27);\n        const _r7 = i0.ɵɵreference(33);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngModel\", ctx.pat.pName)(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, _r0.submitted && _r1.invalid));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r0.submitted && _r1.invalid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.pat.pDob)(\"ngClass\", i0.ɵɵpureFunction1(18, _c0, _r0.submitted && _r3.invalid));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r0.submitted && _r3.invalid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.pat.pMobileNo)(\"ngClass\", i0.ɵɵpureFunction1(20, _c0, _r0.submitted && _r5.invalid));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r0.submitted && _r5.invalid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.pat.pAdd)(\"ngClass\", i0.ɵɵpureFunction1(22, _c0, _r0.submitted && _r7.invalid));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r0.submitted && _r7.invalid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.pat.doc.doctorId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.docList);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.pat.test.tid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.testList);\n      }\n    },\n    dependencies: [i6.NgClass, i6.NgForOf, i6.NgIf, i7.ɵNgNoValidate, i7.NgSelectOption, i7.ɵNgSelectMultipleOption, i7.DefaultValueAccessor, i7.NumberValueAccessor, i7.SelectControlValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.MinLengthValidator, i7.NgModel, i7.NgForm, i8.IndexComponent]\n  });\n  return PatientComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}